package frl

//	"fmt"

type QueryRelationItem struct {
	ObjectType string // frame, relation
	Object     string
	Value      *Value //interface{}
}

type AddRelationItem struct {
	ObjectType string // frame, relation
	Object     string
	Value      *Value //interface{}
}

// сопоставление группы фреймов
// UnifyAll(f1, f2, ...)
// сложение двух фреймо - новый фрейм
// f2.Add(f1) -> new frame with slot
// вычитание из одного фрейма другого
// f2.Sub(f1) -> на выходе новый фрейм у которого только слоты которые есть только у фрейма f2, причем, слоты у которых значения разные - незаполнены
// сравнение фрейма и фрейма
// f2.Compare(f1) -> на выходе новый фрейм у которого только слоты которые есть в одном фрейме, но нет в другом
// вывод на фреймах

// более высокий уровень

// Проверяет, что слот это отношение
// каждый слот, который является отношением
// f1.IsRelation("name") ->
// базовые отношения
// AKO
// это_класс
// это_подкласс
// имеет_значение
// является_частью
/*
   Добавить отношение - добавляет отношение. Перед добавлением проверяет что добавляемое это отношение
   все определяения отношений хранятся в отдельных фреймах. В свойства добавляется признак - Отношение
   func f2.AddRelation("отношение") слот отношение всегда имеет значение Frame
   для быстрого поиска используется словарь с таблицей
   все фреймы лежат в единой таблице
   словарь позволяет получить список всех фреймов в которых есть это отношение
   весь вопрос в том, как сделать поиск по

*/
